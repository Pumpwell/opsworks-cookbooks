global
  log 127.0.0.1   local0
  log 127.0.0.1   local1 notice
  #log loghost    local0 info
  maxconn <%= node[:haproxy][:global_max_connections] %>
  #debug
  #quiet
  user haproxy
  group haproxy
  <% if node[:haproxy][:stats_socket_level] %>
  stats socket <%= node[:haproxy][:stats_socket_path] %> level <%= node[:haproxy][:stats_socket_level] %>
  <% else %>
  stats socket <%= node[:haproxy][:stats_socket_path] %>
  <% end %>

defaults
  log             global
  option          dontlognull
  retries         <%= node[:haproxy][:retries] %>
  option          redispatch
  maxconn        <%= node[:haproxy][:default_max_connections] %>
  timeout client <%= node[:haproxy][:client_timeout] %>             # Client and server timeout must match the longest
  timeout server <%= node[:haproxy][:server_timeout] %>             # time we may wait for a response from the server.
  timeout queue  <%= node[:haproxy][:queue_timeout] %>              # Don't queue requests too long if saturated.
  timeout connect <%= node[:haproxy][:connect_timeout] %>           # There's no reason to change this one.
  timeout http-request <%= node[:haproxy][:http_request_timeout] %>	# A complete request may never take that long.
  <% if node[:haproxy][:httpclose] %>
  <% end %>
  <% if node[:haproxy][:http_server_close] %>
  option          http-server-close                                 # enable HTTP connection closing on the server side
  <% end %>
  option          abortonclose                                      # enable early dropping of aborted requests from pending queue
  <% if node[:haproxy][:enable_stats] -%>
  stats auth <%= node[:haproxy][:stats_user] %>:<%= node[:haproxy][:stats_password] %>
  stats uri <%= node[:haproxy][:stats_url] %>
  <% end -%>

# Set up application listeners here.
<% if !node[:haproxy][:s3_backend].nil? -%>
backend s3_server
  mode http
  option httplog
  option httpchk
  option forwardfor
  option httpclose
  option http-server-close
  reqrep ^Host:   Host:\ <%= node[:haproxy][:s3_backend][:bucket] %>

  server s3 <%= node[:haproxy][:s3_backend][:bucket] %>:80 weight 1 maxconn 8192 check
<% end -%>

backend nodejs_app_servers
  mode http
  option httplog
  balance <%= node[:haproxy][:balance] %>
  option redispatch
  option forwardfor
  option httpclose
  option httpchk <%= node[:haproxy][:health_check_method] %> <%= node[:haproxy][:health_check_url] %>
  <% if node[:haproxy][:backend_api_mounted_at] -%>
    reqrep ^([^\ :]*)\ <%= node[:haproxy][:backend_api_mounted_at] %>/(.*)     \1\ /\2
  <% end -%>
  server api <%= node[:haproxy][:backend_api_service] %>:80 weight 16 maxconn 160 check inter <%= node[:haproxy][:check_interval] %>

backend ws_backend
  mode http
  option httplog
  balance <%= node[:haproxy][:balance] %>
  option redispatch
  option forwardfor
  option httpclose
  option httpchk <%= node[:haproxy][:health_check_method] %> <%= node[:haproxy][:health_check_url] %>
  <% if node[:haproxy][:backend_api_mounted_at] -%>
    reqrep ^([^\ :]*)\ <%= node[:haproxy][:backend_api_mounted_at] %>/(.*)     \1\ /\2
  <% end -%>
  server api <%= node[:haproxy][:backend_api_service] %>:80 weight 16 maxconn 160 check inter <%= node[:haproxy][:check_interval] %>

listen controllers :9731
  balance leastconn
  mode tcp
  option tcplog
  option tcpka
  timeout server 3600s
  timeout client 3600s

  server ambyint <%= node[:haproxy][:backend_controller_service] %>:9731 check

listen iridium :9741
  balance leastconn
  mode tcp
  option tcplog
  timeout server 3600s
  timeout client 3600s

  server ambyint <%= node[:haproxy][:backend_iot_service] %>:9741 check

frontend http-in
  bind :80
  mode http
  option httplog
  option httpclose

  acl           is_websocket hdr(Upgrade) -i Websocket
  use_backend   ws_backend if is_websocket

  # all domains of node.js applications
  acl nodejs_application_ambyint_domain_wellexpert2 path_beg /api

  # choose backend
  use_backend nodejs_app_servers if nodejs_application_ambyint_domain_wellexpert2

  <% if !node[:haproxy][:s3_backend].nil? -%>
  default_backend s3_server
  <% end -%>
